{"ast":null,"code":"var _jsxFileName = \"/Users/ToshibaPc/Desktop/FullStack samples/code/bootcamp/projects/elevation-exercises/projects/react-bank/Client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Layout from './components/Layout';\nimport Transcations from './Transcations';\nimport Operations from './Operations';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Breakdown from './components/Breakdown';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transcations: []\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"http://localhost:5000/transactions\").then(response => {\n        this.setState({\n          transcations: response.data\n        });\n      });\n    };\n\n    this.getBalance = () => {\n      let sum = 0;\n      this.state.transcations.forEach(transcation => sum += parseInt(transcation.amount));\n      return sum;\n    };\n\n    this.removeTranscationById = transcationId => {\n      axios.delete(`http://localhost:5000/transaction/${transcationId}`).then(() => {\n        axios.get(\"http://localhost:5000/transactions\").then(response => {\n          this.setState({\n            transcations: response.data\n          });\n        });\n      });\n    };\n\n    this.withdraw = newTranscation => {\n      newTranscation.amount = newTranscation.amount * -1;\n      axios.post(\"http://localhost:5000/transaction\", newTranscation).then(() => {\n        axios.get(\"http://localhost:5000/transactions\").then(response => {\n          this.setState({\n            transcations: response.data\n          });\n        });\n      });\n    };\n\n    this.deposit = newTranscation => {\n      axios.post(\"http://localhost:5000/transaction\", newTranscation).then(() => {\n        axios.get(\"http://localhost:5000/transactions\").then(response => {\n          this.setState({\n            transcations: response.data\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Balance: \", this.getBalance()), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/breakdown\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(Breakdown, {\n        transcations: this.state.transcations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 66\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/transactions\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(Transcations, {\n        removeTranscationById: this.removeTranscationById,\n        transcations: this.state.transcations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 69\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/operations\",\n      exact: true,\n      render: ({\n        history\n      }) => /*#__PURE__*/React.createElement(Operations, {\n        history: history,\n        withdraw: this.withdraw,\n        deposit: this.deposit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 76\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ToshibaPc/Desktop/FullStack samples/code/bootcamp/projects/elevation-exercises/projects/react-bank/Client/src/App.js"],"names":["React","axios","Layout","Transcations","Operations","BrowserRouter","Router","Route","Breakdown","App","Component","state","transcations","componentDidMount","get","then","response","setState","data","getBalance","sum","forEach","transcation","parseInt","amount","removeTranscationById","transcationId","delete","withdraw","newTranscation","post","deposit","render","history"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Layout from './components/Layout';\nimport Transcations from './Transcations';\nimport Operations from './Operations';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Breakdown from './components/Breakdown';\n\n\nclass App extends React.Component {\n    state = {\n        transcations: []\n    }\n\n    componentDidMount = () => {\n        axios.get(\"http://localhost:5000/transactions\").then(response => {\n          this.setState({transcations: response.data})\n        })\n      }\n    \n      getBalance = () => {\n        let sum = 0;\n        this.state.transcations.forEach(transcation => sum += parseInt(transcation.amount));\n        return sum;\n      }\n    \n      removeTranscationById = transcationId => {\n        axios.delete(`http://localhost:5000/transaction/${transcationId}`)\n          .then(() => {\n            axios.get(\"http://localhost:5000/transactions\")\n              .then(response => {\n                this.setState({transcations: response.data})\n              });\n          });\n      }\n    \n      withdraw = newTranscation => {\n        newTranscation.amount = newTranscation.amount * -1;\n        axios.post(\"http://localhost:5000/transaction\", newTranscation)\n          .then(() => {\n            axios.get(\"http://localhost:5000/transactions\")\n              .then(response => {\n                this.setState({transcations: response.data})\n              })\n          })\n      }\n    \n      deposit = newTranscation => {\n        axios.post(\"http://localhost:5000/transaction\", newTranscation)\n          .then(() => {\n            axios.get(\"http://localhost:5000/transactions\")\n              .then(response => {\n                this.setState({transcations: response.data})\n              })\n          })\n      }\n    render() {\n        return (\n            <React.Fragment>\n                <Layout>\n                <React.Fragment>\n                    <h1>Balance: {this.getBalance()}</h1>\n                    <Router>\n                    <Route path=\"/breakdown\" exact render={() => <Breakdown transcations={this.state.transcations} />} />\n                    <Route path=\"/transactions\" exact render={() => <Transcations removeTranscationById={this.removeTranscationById} transcations={this.state.transcations}/>} />\n                    <Route path=\"/operations\" exact render={({history}) => <Operations history={history} withdraw={this.withdraw} deposit={this.deposit}/>} />\n                    </Router>\n                </React.Fragment>\n                </Layout>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}